<?php

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;


/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @ORM\Entity(repositoryClass="Application\Sonata\UserBundle\Repository\UserRepository")
 * @ORM\Table(name="fos_user_user")
 */
class User extends BaseUser
{
    /**
     * @ORM\OneToOne(targetEntity="COC\COCBundle\Entity\Player", mappedBy="user", cascade={"persist"})
     * @ORM\JoinColumn(name="player_id", referencedColumnName="id", nullable=true)
     **/
    private $player;

    /**
     * @ORM\OneToMany(targetEntity="COC\COCBundle\Entity\Video", mappedBy="user")
     **/
    private $videos ;

    /**
     * @ORM\OneToMany(targetEntity="COC\COCBundle\Entity\ImageBase", mappedBy="user")
     **/
    private $imagebases ;

    /**
     * @ORM\OneToMany(targetEntity="COC\COCBundle\Entity\ImageBonus", mappedBy="user")
     **/
    private $imagebonuses;

    /**
     * @ORM\OneToMany(targetEntity="COC\COCBundle\Entity\ImageBestAttack", mappedBy="user")
     **/
    private $imageBestAttacks;

    /**
     * Get user
     *
     * @return \COC\COCBundle\Entity\Player
     */
    public function getPlayer()
    {
        return $this->player;
    }


    /**
     * @var integer $id
     *
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }



    /**
     * Set player
     *
     * @param \COC\COCBundle\Entity\Player $player
     * @return User
     */
    public function setPlayer(\COC\COCBundle\Entity\Player $player = null)
    {
        $this->player = $player;

        return $this;
    }

    /**
     * Constructor
     */
    public function __construct()
    {
        parent::__construct();
        $this->videos = new \Doctrine\Common\Collections\ArrayCollection();
        $this->imagebases = new \Doctrine\Common\Collections\ArrayCollection();
        $this->imageBestAttacks = new \Doctrine\Common\Collections\ArrayCollection();
        $this->imagebonuses = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add videos
     *
     * @param \COC\COCBundle\Entity\Video $videos
     * @return User
     */
    public function addVideo(\COC\COCBundle\Entity\Video $videos)
    {
        $this->videos[] = $videos;

        return $this;
    }

    /**
     * Remove videos
     *
     * @param \COC\COCBundle\Entity\Video $videos
     */
    public function removeVideo(\COC\COCBundle\Entity\Video $videos)
    {
        $this->videos->removeElement($videos);
    }

    /**
     * Get videos
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getVideos()
    {
        return $this->videos;
    }
 

    /**
     * Add imagebases
     *
     * @param \COC\COCBundle\Entity\ImageBase $imagebases
     * @return User
     */
    public function addImagebase(\COC\COCBundle\Entity\ImageBase $imagebases)
    {
        $this->imagebases[] = $imagebases;

        return $this;
    }

    /**
     * Remove imagebases
     *
     * @param \COC\COCBundle\Entity\ImageBase $imagebases
     */
    public function removeImagebase(\COC\COCBundle\Entity\ImageBase $imagebases)
    {
        $this->imagebases->removeElement($imagebases);
    }

    /**
     * Get imagebases
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getImagebases()
    {
        return $this->imagebases;
    }




    /**
     * Add imagebonuses
     *
     * @param \COC\COCBundle\Entity\ImageBonus $imagebonuses
     * @return User
     */
    public function addImagebonus(\COC\COCBundle\Entity\ImageBonus $imagebonuses)
    {
        $this->imagebonuses[] = $imagebonuses;

        return $this;
    }

    /**
     * Remove imagebonuses
     *
     * @param \COC\COCBundle\Entity\ImageBonus $imagebonuses
     */
    public function removeImagebonus(\COC\COCBundle\Entity\ImageBonus $imagebonuses)
    {
        $this->imagebonuses->removeElement($imagebonuses);
    }

    /**
     * Get imagebonuses
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getImagebonuses()
    {
        return $this->imagebonuses;
    }

    /**
     * Add imageBestAttacks
     *
     * @param \COC\COCBundle\Entity\ImageBestAttack $imageBestAttacks
     * @return User
     */
    public function addImageBestAttack(\COC\COCBundle\Entity\ImageBestAttack $imageBestAttacks)
    {
        $this->imageBestAttacks[] = $imageBestAttacks;

        return $this;
    }

    /**
     * Remove imageBestAttacks
     *
     * @param \COC\COCBundle\Entity\ImageBestAttack $imageBestAttacks
     */
    public function removeImageBestAttack(\COC\COCBundle\Entity\ImageBestAttack $imageBestAttacks)
    {
        $this->imageBestAttacks->removeElement($imageBestAttacks);
    }

    /**
     * Get imageBestAttacks
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getImageBestAttacks()
    {
        return $this->imageBestAttacks;
    }






    /**
     * Set clan
     *
     * @param \COC\COCBundle\Entity\Clan $clan
     * @return User
     */
    public function setClan(\COC\COCBundle\Entity\Clan $clan = null)
    {
        $this->clan = $clan;

        return $this;
    }

    /**
     * Get clan
     *
     * @return \COC\COCBundle\Entity\Clan 
     */
    public function getClan()
    {
        return $this->clan;
    }


}
